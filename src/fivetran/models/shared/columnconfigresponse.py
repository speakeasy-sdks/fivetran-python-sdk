"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import columnenabledpatchsettings as shared_columnenabledpatchsettings
from dataclasses_json import Undefined, dataclass_json
from fivetran import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class ColumnConfigResponse:
    
    enabled: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('enabled'), 'exclude': lambda f: f is None }})

    r"""The boolean value specifying whether the sync for the table into the destination is enabled."""
    enabled_patch_settings: Optional[shared_columnenabledpatchsettings.ColumnEnabledPatchSettings] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('enabled_patch_settings'), 'exclude': lambda f: f is None }})

    hashed: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('hashed'), 'exclude': lambda f: f is None }})

    r"""The boolean value specifying whether a column should be hashed"""
    name_in_destination: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('name_in_destination'), 'exclude': lambda f: f is None }})

    r"""The schema name within your destination in accordance with Fivetran conventional rules"""
    